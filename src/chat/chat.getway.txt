import {
  WebSocketGateway,
  SubscribeMessage,
  MessageBody,
  WebSocketServer,
  OnGatewayConnection,
  OnGatewayDisconnect,
} from '@nestjs/websockets';
import { Server, Socket } from 'socket.io';

@WebSocketGateway({ cors: true })
export class ChatGateway implements OnGatewayConnection, OnGatewayDisconnect {
  @WebSocketServer()
  server: Server;

  handleConnection(client: Socket) {
    const userId = client.handshake.query.userId as string;
    if (userId) {
      client.join(userId); // Join the room based on userId
      console.log(`User ${userId} connected with socket ID: ${client.id}`);
    }
  }

  handleDisconnect(client: Socket) {
    console.log(`Client disconnected: ${client.id}`);
  }

  @SubscribeMessage('send_message')
  handleMessage(
    @MessageBody()
    message: { from: string; to: string; text: string },
  ) {
    console.log(`Message from ${message.from} to ${message.to}: ${message.text}`);

    // Emit only to the recipient room
    this.server.to(message.to).emit('receive_message', message);
  }
}
